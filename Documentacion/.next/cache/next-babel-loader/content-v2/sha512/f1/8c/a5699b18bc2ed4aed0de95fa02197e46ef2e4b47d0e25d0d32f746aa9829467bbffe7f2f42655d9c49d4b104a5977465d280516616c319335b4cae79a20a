{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* @jsxRuntime classic */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport withLayout from 'nextra-theme-docs';\nimport { withSSG } from 'nextra/ssg';\nimport layoutConfig from 'C:/Users/kevin/Desktop/FinalProject/Documentacion/theme.config.js';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _objectSpread({}, props));\n};\n\nconst MDXLayout = function NextraPage(props) {\n  return withSSG(withLayout({\n    filename: \"C:/Users/kevin/Desktop/FinalProject/Documentacion/pages/entrega_1/backend/DOCKER.md\",\n    route: \"/entrega_1/backend/DOCKER\",\n    meta: {},\n    pageMap: [{\n      \"name\": \"entrega_0\",\n      \"children\": [{\n        \"name\": \"entrega_0\",\n        \"route\": \"\\\\entrega_0\\\\entrega_0\"\n      }, {\n        \"name\": \"instrucciones\",\n        \"children\": [{\n          \"name\": \"logginForm_symfony\",\n          \"route\": \"\\\\entrega_0\\\\instrucciones\\\\logginForm_symfony\"\n        }, {\n          \"name\": \"meta.json\",\n          \"meta\": {\n            \"logginForm_symfony\": \"Loggin Form\",\n            \"registerForm_symfony\": \"Register Form\",\n            \"setup_symfony_basic\": \"Setup Symfony\"\n          }\n        }, {\n          \"name\": \"registerForm_symfony\",\n          \"route\": \"\\\\entrega_0\\\\instrucciones\\\\registerForm_symfony\"\n        }, {\n          \"name\": \"setup_symfony_basic\",\n          \"route\": \"\\\\entrega_0\\\\instrucciones\\\\setup_symfony_basic\"\n        }],\n        \"route\": \"\\\\entrega_0\\\\instrucciones\"\n      }, {\n        \"name\": \"meta.json\",\n        \"meta\": {\n          \"entrega_0\": \"Inicio\",\n          \"instrucciones\": \"Instrucciones de inicio\",\n          \"entrega_1\": \"Entrega 1\"\n        }\n      }],\n      \"route\": \"\\\\entrega_0\"\n    }, {\n      \"name\": \"entrega_1\",\n      \"children\": [{\n        \"name\": \"backend\",\n        \"children\": [{\n          \"name\": \"API\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\API\"\n        }, {\n          \"name\": \"DOCKER\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\DOCKER\"\n        }, {\n          \"name\": \"DOCTRINE\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\DOCTRINE\"\n        }, {\n          \"name\": \"FIXTURES\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\FIXTURES\"\n        }, {\n          \"name\": \"LOGIN\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\LOGIN\",\n          \"frontMatter\": {\n            \"name\": \"Login\"\n          }\n        }, {\n          \"name\": \"OBSTACULOS\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\OBSTACULOS\"\n        }, {\n          \"name\": \"RECURSOS\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\RECURSOS\"\n        }],\n        \"route\": \"\\\\entrega_1\\\\backend\"\n      }, {\n        \"name\": \"base_de_datos\",\n        \"children\": [{\n          \"name\": \"bbdd\",\n          \"route\": \"\\\\entrega_1\\\\base_de_datos\\\\bbdd\"\n        }],\n        \"route\": \"\\\\entrega_1\\\\base_de_datos\"\n      }, {\n        \"name\": \"frontend\",\n        \"children\": [{\n          \"name\": \"Aplicacion\",\n          \"route\": \"\\\\entrega_1\\\\frontend\\\\Aplicacion\",\n          \"frontMatter\": {\n            \"name\": \"Aplicacion\"\n          }\n        }, {\n          \"name\": \"Obstaculos\",\n          \"route\": \"\\\\entrega_1\\\\frontend\\\\Obstaculos\",\n          \"frontMatter\": {\n            \"name\": \"Obstaculos\"\n          }\n        }, {\n          \"name\": \"React_Inicio\",\n          \"route\": \"\\\\entrega_1\\\\frontend\\\\React_Inicio\",\n          \"frontMatter\": {\n            \"name\": \"React_Inicio\"\n          }\n        }],\n        \"route\": \"\\\\entrega_1\\\\frontend\"\n      }, {\n        \"name\": \"meta.json\",\n        \"meta\": {\n          \"base_de_datos\": \"Base de datos\"\n        }\n      }],\n      \"route\": \"\\\\entrega_1\"\n    }, {\n      \"name\": \"index\",\n      \"route\": \"\\\\\"\n    }, {\n      \"name\": \"meta.json\",\n      \"meta\": {\n        \"index\": \"Proyecto Recipe Me!\",\n        \"entrega_0\": \"Entrega 0\",\n        \"entrega_1\": \"Entrega 1\"\n      }\n    }, {\n      \"name\": \"_app\",\n      \"route\": \"\\\\_app\"\n    }]\n  }, layoutConfig))(props);\n};\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread({}, props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, `INSTRUCCIONES DOCKER`), mdx(\"p\", null, `El objetivo es tener una base de datos en común, independiente de nuestra máquina. De este modo no necesitaremos modificar nunca el archivo de variables de entorno `, mdx(\"strong\", _objectSpread({}, {\n    \"parentName\": \"p\"\n  }), `.env`), ` de nuestra aplicación.`), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Descargar `, mdx(\"strong\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), `Docker desktop`), ` de la pagina oficial.`), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Ir al directorio donde queremos instalar contenedores.`)), mdx(\"h3\", null, `Instalamos un contenedor con mysql:`), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-php\",\n    \"parentName\": \"pre\"\n  }), `> bin/console make:docker:database \n`)), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Ejecutamos `, mdx(\"strong\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), `TODOS`), ` los contenedores disponibles. Tarda unos segundos en encenderlo todo.`)), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-php\",\n    \"parentName\": \"pre\"\n  }), `> docker-compose up -d\n`)), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Para acceder a la base de datos:`)), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-php\",\n    \"parentName\": \"pre\"\n  }), `> docker-compose exec database mysql -u root --password=password\n`)), mdx(\"h3\", null, `Otros comandos:`), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Paramos los contenedores activos: `, mdx(\"inlineCode\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), `docker-compose stop`)), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Paramos contenedores y eliminamos su imagen por completo `, `[elimina el mini server]`, `: `, mdx(\"inlineCode\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), `docker-compose down`)), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), `Chequea los contenedores que estan encendidos: `, mdx(\"inlineCode\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), `docker-compose ps`))), mdx(\"h3\", null, `Checkear las variables de entorno que esta ejecutando symfony`), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-php\",\n    \"parentName\": \"pre\"\n  }), `> symfony var:export --multiline\n`)), mdx(\"h3\", null, `Antes de empezar a trabajar siempre tendremos que hacer:`), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-php\",\n    \"parentName\": \"pre\"\n  }), `> docker-compose up -d\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}