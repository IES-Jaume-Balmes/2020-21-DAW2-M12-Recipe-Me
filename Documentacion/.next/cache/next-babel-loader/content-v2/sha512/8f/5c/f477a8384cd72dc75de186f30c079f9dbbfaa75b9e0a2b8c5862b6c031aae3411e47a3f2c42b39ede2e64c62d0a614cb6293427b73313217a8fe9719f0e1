{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/kevin/Desktop/FinalProject/Documentacion/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"C:/Users/kevin/Desktop/FinalProject/Documentacion/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* @jsxRuntime classic */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport withLayout from 'nextra-theme-docs';\nimport { withSSG } from 'nextra/ssg';\nimport layoutConfig from 'C:/Users/kevin/Desktop/FinalProject/Documentacion/theme.config.js';\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread({}, props));\n  };\n};\n\nvar MDXLayout = function NextraPage(props) {\n  return withSSG(withLayout({\n    filename: \"C:/Users/kevin/Desktop/FinalProject/Documentacion/pages/entrega_1/frontend/Aplicacion.md\",\n    route: \"/entrega_1/frontend/Aplicacion\",\n    meta: {\n      \"name\": \"Aplicacion\"\n    },\n    pageMap: [{\n      \"name\": \"entrega_0\",\n      \"children\": [{\n        \"name\": \"entrega_0\",\n        \"route\": \"\\\\entrega_0\\\\entrega_0\"\n      }, {\n        \"name\": \"instrucciones\",\n        \"children\": [{\n          \"name\": \"logginForm_symfony\",\n          \"route\": \"\\\\entrega_0\\\\instrucciones\\\\logginForm_symfony\"\n        }, {\n          \"name\": \"meta.json\",\n          \"meta\": {\n            \"logginForm_symfony\": \"Loggin Form\",\n            \"registerForm_symfony\": \"Register Form\",\n            \"setup_symfony_basic\": \"Setup Symfony\"\n          }\n        }, {\n          \"name\": \"registerForm_symfony\",\n          \"route\": \"\\\\entrega_0\\\\instrucciones\\\\registerForm_symfony\"\n        }, {\n          \"name\": \"setup_symfony_basic\",\n          \"route\": \"\\\\entrega_0\\\\instrucciones\\\\setup_symfony_basic\"\n        }],\n        \"route\": \"\\\\entrega_0\\\\instrucciones\"\n      }, {\n        \"name\": \"meta.json\",\n        \"meta\": {\n          \"entrega_0\": \"Inicio\",\n          \"instrucciones\": \"Instrucciones de inicio\",\n          \"entrega_1\": \"Entrega 1\"\n        }\n      }],\n      \"route\": \"\\\\entrega_0\"\n    }, {\n      \"name\": \"entrega_1\",\n      \"children\": [{\n        \"name\": \"backend\",\n        \"children\": [{\n          \"name\": \"API\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\API\"\n        }, {\n          \"name\": \"DOCKER\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\DOCKER\"\n        }, {\n          \"name\": \"DOCTRINE\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\DOCTRINE\"\n        }, {\n          \"name\": \"FIXTURES\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\FIXTURES\"\n        }, {\n          \"name\": \"LOGIN\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\LOGIN\",\n          \"frontMatter\": {\n            \"name\": \"Login\"\n          }\n        }, {\n          \"name\": \"OBSTACULOS\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\OBSTACULOS\"\n        }, {\n          \"name\": \"RECURSOS\",\n          \"route\": \"\\\\entrega_1\\\\backend\\\\RECURSOS\"\n        }],\n        \"route\": \"\\\\entrega_1\\\\backend\"\n      }, {\n        \"name\": \"base_de_datos\",\n        \"children\": [{\n          \"name\": \"bbdd\",\n          \"route\": \"\\\\entrega_1\\\\base_de_datos\\\\bbdd\"\n        }],\n        \"route\": \"\\\\entrega_1\\\\base_de_datos\"\n      }, {\n        \"name\": \"frontend\",\n        \"children\": [{\n          \"name\": \"Aplicacion\",\n          \"route\": \"\\\\entrega_1\\\\frontend\\\\Aplicacion\",\n          \"frontMatter\": {\n            \"name\": \"Aplicacion\"\n          }\n        }, {\n          \"name\": \"Obstaculos\",\n          \"route\": \"\\\\entrega_1\\\\frontend\\\\Obstaculos\",\n          \"frontMatter\": {\n            \"name\": \"Obstaculos\"\n          }\n        }, {\n          \"name\": \"React_Inicio\",\n          \"route\": \"\\\\entrega_1\\\\frontend\\\\React_Inicio\",\n          \"frontMatter\": {\n            \"name\": \"React_Inicio\"\n          }\n        }],\n        \"route\": \"\\\\entrega_1\\\\frontend\"\n      }, {\n        \"name\": \"meta.json\",\n        \"meta\": {\n          \"base_de_datos\": \"Base de datos\"\n        }\n      }],\n      \"route\": \"\\\\entrega_1\"\n    }, {\n      \"name\": \"index\",\n      \"route\": \"\\\\\"\n    }, {\n      \"name\": \"meta.json\",\n      \"meta\": {\n        \"index\": \"Proyecto Recipe Me!\",\n        \"entrega_0\": \"Entrega 0\",\n        \"entrega_1\": \"Entrega 1\"\n      }\n    }, {\n      \"name\": \"_app\",\n      \"route\": \"\\\\_app\"\n    }]\n  }, layoutConfig))(props);\n};\n\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread({}, props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Circuito de la aplicaci\\xF3n\"), mdx(\"p\", null, \"Para llevar a cabo nuestra idea primeramente hemos pensado en realizar un registro/login para que el usuario pueda, entrar a trav\\xE9s del portal o registrarse.\"), mdx(\"h2\", null, \"Login\"), mdx(\"p\", null, \"Se compone de dos inputs:\"), mdx(\"ol\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ol\"\n  }), \"Campo Username (Correo electr\\xF3nico)\"), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ol\"\n  }), \"Campo Password.\")), mdx(\"p\", null, \"A nivel de c\\xF3digo el Login tiene una variable de estado que controlar\\xE1 los inputs y los cambios en este. Que ser\\xE1n el email y el password.\"), mdx(\"h3\", null, \"Funciones\"), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"handleChange: Controla los cambios que se produzcan en los inputs y actualiza la variable de estado form con los datos actualizados.\")), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"iniciarSesion: Esta funci\\xF3n es llamada al clickar en el Boton de \\\"Ingresar!\\\", lo que hace la funci\\xF3n es hacer una petici\\xF3n ajax con la dependencia \\\"axios\\\" a la url de la api\"))), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"const baseUrl = \\\"https://localhost:8000/login\\\";\\n\")), mdx(\"p\", null, \"A esta ruta se le envia los datos de usuario por POST en un json\"), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"let jsonPeticion = {\\n  email: this.state.form.email,\\n  password: this.state.form.password,\\n};\\n\")), mdx(\"p\", null, \"Si el Loggin se ha hecho correctamente la respuesta de la API es un json con un id de user y el nombre del usuario, lo que guardamos en una cookie ayudados por la librer\\xEDa \\\"universal-cookie\\\"\"), mdx(\"p\", null, \"Si la validaci\\xF3n de usuario no ha sido correcta se muestra un alert con la informaci\\xF3n \\\"Contrase\\xF1a o usuario incorrecto\\\" para no dar pistas a un posible atacante sobre qu\\xE9 es lo que ha ido mal.\"), mdx(\"p\", null, \"Una vez todo a salido correctamente se redigir\\xE1 al usuario a la p\\xE1gina main de la aplicaci\\xF3n\"), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"window.location.href = \\\"./main\\\";\\n\")), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"registrarse: Este m\\xE9todo es llamado cuando se da click al boton de registrarse, lo \\xFAnico que hace es rederigir al usuario a la p\\xE1gina de Registro\")), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"componentDidMount: est\\xE1 funci\\xF3n se encarga de comprobar si existe un usuario logeado a trav\\xE9s de las cookies disponibles, si la cookie existe significa que hay un usuario loggeado y lo redirige automaticamente a la mantalla main.\"))), mdx(\"h2\", null, \"Registro\"), mdx(\"p\", null, \"Se compone de cuatro inputs:\"), mdx(\"ol\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ol\"\n  }), \"Email\"), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ol\"\n  }), \"Nombre Completo\"), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ol\"\n  }), \"Contrase\\xF1a\"), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ol\"\n  }), \"Repetir Contrase\\xF1a\")), mdx(\"p\", null, \"Al igual que el loggin, el Register tiene una variable de estado para controlar los inputs que se cumplimentan.\"), mdx(\"h3\", null, \"Funciones\"), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"handChange: Controla los cambios que se produzcan en los inputs y actualiza la variable de estado form con los datos actualizados.\")), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"registrarse: Este m\\xE9todo crea primero un json a partir de los datos extraidos del formulario, estos datos a\\xFAn no est\\xE1n validados.\"))), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"let jsonPeticion = {\\n  email: this.state.form.email,\\n  username: this.state.form.nombre,\\n  password: md5(this.state.form.password),\\n};\\n\")), mdx(\"p\", null, \"Luego se realiza una petici\\xF3n a la API al endpoint\"), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"const baseUrl = \\\"http://localhost:8000/users\\\";\\n\")), mdx(\"p\", null, \"Si todo va bien el usuario ser\\xE1 redirigido a la pantalla de Loggin para que pueda conectarse a su Perfil.\"), mdx(\"p\", null, \"Si algo sale mal le aparecer\\xE1 un alert con el texto \\\"Ha ocurrido un error\\\"\"), mdx(\"h2\", null, \"Main\"), mdx(\"p\", null, \"El usuario no podr\\xE1 acceder al main sin ser validado anteriormente.\"), mdx(\"p\", null, \"Si el usuario intenta entrar al main directamente ser\\xE1 rederigido a la pantalla de Login.\"), mdx(\"p\", null, \"El main contiene 3 divs:\"), mdx(\"h3\", null, \"1 Sidebar.js (Component)\"), mdx(\"p\", null, \"Este componente renderiza un mapeo de la array que esta en sidebarData.js.\"), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"SidebarData contiene la informaci\\xF3n de los directorios junto a su path para cuando desde el main cliquemos en el vaya a la ruta que necesita.\")), mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), mdx(\"p\", _objectSpread({}, {\n    \"parentName\": \"li\"\n  }), \"Este sidebar es pintado en el apartado ./css/main.css\"))), mdx(\"h3\", null, \"Sidebardata,js(Component)\"), mdx(\"p\", null, \"Este archivo simplemente contiene un array con la informaci\\xF3n que queremos mostrr en nuestro sidebar.\"), mdx(\"h3\", null, \"2 Contenido\"), mdx(\"p\", null, \"En este div es donde iremos renderizando las diferentes partes de nuestra aplicaci\\xF3n mediante el route y switch siendo clicado por Links.\"), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"\\n      <Router>\\n        <div className=\\\"container\\\">\\n          <div className=\\\"sideBar\\\">\\n            <Sidebar />\\n          </div>\\n          <div>\\n            <Switch>\\n              <Route path=\\\"/home\\\" exact>\\n                <Recetas />\\n              </Route>\\n            </Switch>\\n          </div>\\n          <div>\\n            <button className=\\\"buttonLogout\\\" onClick={()=>this.cerrarSesion()}>\\n              Cerrar Sesi\\xF3n\\n            </button>\\n          </div>\\n        </div>\\n      </Router>\\n\")), mdx(\"h2\", null, \"3 Bot\\xF3n cerrar sesi\\xF3n\"), mdx(\"ul\", null, mdx(\"li\", _objectSpread({}, {\n    \"parentName\": \"ul\"\n  }), \"Toda aplicaci\\xF3n tiene un bot\\xF3n para poder salir el cual nos devolvera al principio en el apartado de registrarse / login\")), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"<button className=\\\"buttonLogout\\\" onClick={()=>this.cerrarSesion()}>\\nCerrar Sesi\\xF3n\\n</button>\\n\")), mdx(\"pre\", null, mdx(\"code\", _objectSpread({}, {\n    \"className\": \"language-js\",\n    \"parentName\": \"pre\"\n  }), \"  cerrarSesion = () => {\\n    cookie.remove(\\\"user\\\", { path: \\\"/\\\" });\\n    cookie.remove(\\\"username\\\", { path: \\\"/\\\" });\\n    window.location.href = \\\"./\\\";\\n  };\\n\")), mdx(\"h2\", null, \"Recetas\"), mdx(\"p\", null, \"Dentro del menu de navegaci\\xF3n el usuario se encuentra un apartado que muestra todas las recetas que existen en la aplicaci\\xF3n.\\nEn este componente se deber\\xEDa hacer una petici\\xF3n a la API, la cual a\\xFAn no est\\xE1 implementada, de momento existe un json que imita el formato devuelto por la API para poder hacer las pruebas de desarrollo.\\nEl componentes recibe un array de objetos que representan a cada una de las recetas, luego se renderiza cada una de estas recetas en una tarjeta para su correcta visualizaci\\xF3n.\"));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}